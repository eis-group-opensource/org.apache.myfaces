/* Copyright Â© 2016 EIS Group and/or one of its affiliates. All rights reserved. Unpublished work under U.S. copyright laws.
 CONFIDENTIAL AND TRADE SECRET INFORMATION. No portion of this work may be copied, distributed, modified, or incorporated into any other media without EIS Group prior written consent.*/
package javax.faces.component.html;

import javax.faces.component.UIForm;

import org.apache.myfaces.buildtools.maven2.plugin.builder.annotation.JSFComponent;
import org.apache.myfaces.buildtools.maven2.plugin.builder.annotation.JSFProperty;

/**
 * Renders an HTML form element.
 */
@JSFComponent
(name = "h:form",
clazz = "javax.faces.component.html.HtmlForm",template=true,
tagClass = "org.apache.myfaces.taglib.html.HtmlFormTag",
defaultRendererType = "javax.faces.Form"
)
abstract class _HtmlForm extends UIForm
    implements _EventProperties, _UniversalProperties, _StyleProperties
{

  static public final String COMPONENT_FAMILY =
    "javax.faces.Form";
  static public final String COMPONENT_TYPE =
    "javax.faces.HtmlForm";

  /**
   * HTML: Provides a comma-separated list of content types that the 
   * server processing this form can handle.
   * 
   */
  @JSFProperty
  public abstract String getAccept();

  /**
   * HTML: The list of character encodings accepted by the server for this
   * form.
   * 
   */
  @JSFProperty
  public abstract String getAcceptcharset();

  /**
   * HTML: The content type used to submit this form to the server.
   * 
   */
  @JSFProperty(defaultValue = "application/x-www-form-urlencoded")
  public abstract String getEnctype();

  /**
   * HTML: Script to be invoked when this form is reset.
   * 
   */
  @JSFProperty
  public abstract String getOnreset();

  /**
   * HTML: Script to be invoked when this form is submitted.
   * 
   */
  @JSFProperty
  public abstract String getOnsubmit();
  
  /**
   * HTML: Names the frame that should display content generated by invoking this action. 
   * 
   */
  @JSFProperty
  public abstract String getTarget();
  
  
}
